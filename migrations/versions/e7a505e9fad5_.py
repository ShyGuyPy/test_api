"""empty message

Revision ID: e7a505e9fad5
Revises: 
Create Date: 2019-05-07 09:27:46.657279

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e7a505e9fad5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(length=250), nullable=False),
    sa.Column('creation_date', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('gage_flow')
    op.drop_table('literature_references')
    op.drop_table('huc_8')
    op.drop_table('column_names')
    op.drop_table('Outliers')
    op.drop_table('wq_data')
    op.drop_table('wilcox_output')
    op.drop_table('gage_info')
    op.drop_table('wqp_sel_params')
    op.drop_table('param_range')
    op.drop_table('legacy_sel_params')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('legacy_sel_params',
    sa.Column('PARAMETER_NUMBER', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('CONVERSION', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICPRB_NAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICPRB_UNITS', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('KEEP', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('param_range',
    sa.Column('ICPRB_NAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('MIN', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('MAX', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('wqp_sel_params',
    sa.Column('CharacteristicName', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ResultSampleFractionText', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ResultMeasure_MeasureUnitCode', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ResultAnalyticalMethod_MethodName', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ProviderName', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ResultAnalyticalMethod_MethodIdentifier', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ResultAnalyticalMethod_MethodIdentifierContext', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICPRB_NAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('CONVERSION', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICPRB_UNITS', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('KEEP', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICPRB_CODE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('gage_info',
    sa.Column('GAGE_ID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('GAGE_NAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('STATE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('STREAM_NAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SITE_TYPE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LAT_DD', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LONG_DD', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('DATUM', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('STATE_CD', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('COUNTY_CD', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('HUC_10', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('DRAINAGE_AREA_SQMI', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('MINDATE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('MAXDATE', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('wilcox_output',
    sa.Column('site', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('icprb_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('estimate', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('p.value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('conf.low', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('method', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('alternative', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sig', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('median_1', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('median_2', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('diff', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('trend', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('statistic', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('conf.high', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('state_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('optional', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('p_strength', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('wq_data',
    sa.Column('AGENCY', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SITE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICPRB_NAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('DATE', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('CENSORED', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('AGENCY_NAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYIDENTIFIER', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ACTIVITY_TYPE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYMEDIANAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYMEDIASUBDIVISIONNAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('TIME', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYSTARTTIME_TIMEZONECODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('END_DATE', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('END_TIME', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYENDTIME_TIMEZONECODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYDEPTHHEIGHTMEASURE_MEASUREVALUE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYDEPTHHEIGHTMEASURE_MEASUREUNITCODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYDEPTHALTITUDEREFERENCEPOINTTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYTOPDEPTHHEIGHTMEASURE_MEASUREVALUE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYTOPDEPTHHEIGHTMEASURE_MEASUREUNITCODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYBOTTOMDEPTHHEIGHTMEASURE_MEASUREVALUE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYBOTTOMDEPTHHEIGHTMEASURE_MEASUREUNITCODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PROJECTIDENTIFIER', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYCONDUCTINGORGANIZATIONTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ACTIVITYCOMMENTTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SAMPLEAQUIFER', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('HYDROLOGICCONDITION', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('HYDROLOGICEVENT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SAMPLECOLLECTIONMETHOD_METHODIDENTIFIER', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SAMPLECOLLECTIONMETHOD_METHODIDENTIFIERCONTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SAMPLECOLLECTIONMETHOD_METHODNAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SAMPLECOLLECTIONEQUIPMENTNAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('RESULTDETECTIONCONDITIONTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PARAMETER', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('RESULTSAMPLEFRACTIONTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('REPORTED_VALUE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('REPORTED_UNITS', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('MEASUREQUALIFIERCODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('RESULTSTATUSIDENTIFIER', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('STATISTICALBASECODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('RESULT_TYPE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('RESULTWEIGHTBASISTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('RESULTTEMPERATUREBASISTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PRECISIONVALUE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('RESULTCOMMENTTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('USGSPCODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('DEPTH', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('RESULTDEPTHHEIGHTMEASURE_MEASUREUNITCODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('RESULTDEPTHALTITUDEREFERENCEPOINTTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('RESULTANALYTICALMETHOD_METHODIDENTIFIER', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('RESULTANALYTICALMETHOD_METHODIDENTIFIERCONTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('RESULTANALYTICALMETHOD_METHODNAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('METHODDESCRIPTIONTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LABORATORYNAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ANALYSISSTARTDATE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('RESULTLABORATORYCOMMENTTEXT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('DETECTIONQUANTITATIONLIMITTYPENAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('DETECTIONQUANTITATIONLIMITMEASURE_MEASUREVALUE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('DETECTIONQUANTITATIONLIMITMEASURE_MEASUREUNITCODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PREPARATIONSTARTDATE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PROVIDERNAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SITE_NAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('HUC_8', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LATITUDE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('LONGITUDE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('HORIZONTALCOORDINATEREFERENCESYSTEMDATUMNAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('VERTICALCOORDINATEREFERENCESYSTEMDATUMNAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('STATE_NAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('COUNTY_NAME', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('UMK', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('REPLICATE_NUMBER', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('CS', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('COMPOSITE_GRAB_NUMBER', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('PRIMARY_ACTIVITY_CATEGORY', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SECONDARY_ACTIVITY_CATEGORY', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PARAMETER_NUMBER', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('REPORTING_CODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('DECIMAL_POINT_LOCATION', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('GROUP_CODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('CHEMICAL_ABSTRACT_NUMBER', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PRIORITY_POLLUTANT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('TOXIC_EXTRACTION', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('PUBLISH', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SUB_GROUP_CODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ENTRY_DATE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('REVISION_DATE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('TRACKING_CODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICPRB_CODE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICPRB_VALUE', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ICPRB_UNITS', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICPRB_CONVERSION', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('COMPOSITE_METHOD', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('COMPOSITE_STATISTIC', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('MONTH', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('YEAR', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICP_ID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('SITE_NAME_EDIT', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('HUC_12', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('STATE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('GAGE_ID', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('Outliers',
    sa.Column('PARAMETER', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Q25', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Q50', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('Q75', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('LOW_FENCE_1.5', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('UP_FENCE_1.5', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('LOW_FENCE_3', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('UP_FENCE_3', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('LOW_FENCE_4.5', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('UP_FENCE_4.5', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('column_names',
    sa.Column('WQP_COLUMNS', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('LEGACY_COLUMNS', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICPRB_COLUMNS', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('NOTES', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('CLASS', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('huc_8',
    sa.Column('SITE', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICP_ID', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('HUC_8', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ICPRB_NAME', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('literature_references',
    sa.Column('Parameter(s)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Author(s)', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Year', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Publication', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Geographic Extent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Trend Period (Years)', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('gage_flow',
    sa.Column('DATE', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('GAGE_ID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('FLOW', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('FLAG', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.drop_table('comments')
    op.drop_table('categories')
    # ### end Alembic commands ###
